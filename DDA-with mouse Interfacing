#include <iostream>
#include<math.h>
#include<GL/gl.h>
#include<GL/glu.h>
#include <GL/freeglut.h>
using namespace std;

#define h 600
#define w 800


int a1,b2,c1,d2;
void initGL() {
	glClearColor(1.0f, 1.0f, 1.0f, 1.0f);//  second window
	glLineWidth(3.0);
	glPointSize(4.0);
	glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(-w/2, w/2, -h/2, h/2);
}

void setPixel(int x, int y){
	glColor3f(0.3f, 0.3f, 0.3f);
	glBegin(GL_POINTS);
	glVertex2i(x, y);
	glEnd();
	
}
void display(){
		 
	 glClearColor(2.0f, 2.0f, 2.0f, 2.0f);
	 glClear(GL_COLOR_BUFFER_BIT);
	 
	   for (int i = -w; i < w; i++){
		setPixel(i, 0);
		setPixel(0, i);    
    }
	     
	glFlush();
}

 void simpleLine(){
 	
    int dx= c1-a1;
	int dy= d2-b2;
	int length=dx;
	if(abs(dy)>abs(dx))
	{
		length=dy;
	}
	
	// first point
	 float x1=1.0f*a1;
	 float y1=1.0f*b2;
	 
	 float x=(1.0f*dx)/length;
	 float y=(1.0f*dy)/length;
	 
	  	 glBegin(GL_POINTS);
	    glColor3f(3.0f,0.0f,1.0f);
	    glVertex2f(x1,y1);
	    int i=1;
	    while(i<=length) {
	    	x1+=x;
	    	y1+=y;
	    	glVertex2f(round(x1),round(y1));
	    	i++;
		}  
	    glEnd();
 	glFlush();
 }
 
  void  dottedLine(){
 	
    int dx= c1-a1;
	int dy= d2-b2;
	int length=dx;
	if(abs(dy)>abs(dx))
	{
		length=dy;
	}
	
	// first point
	 float x1=1.0f*a1;
	 float y1=1.0f*b2;
	 
	 float x=(1.0f*dx)/length;
	 float y=(1.0f*dy)/length;
	 
	  	 glBegin(GL_POINTS);
	    glColor3f(3.0f,0.0f,0.0f);
	    glVertex2f(x1,y1);
	    int i=1;
	    while(i<=length) {
	    	x1+=x;
	    	y1+=y;
	    	if(i%5==0){
	    	glVertex2f(round(x1),round(y1));
	    }
	    	i++;
		}  
	    glEnd();
 	glFlush();
 }
 
    void dashedLine(){
 	
    int dx= c1-a1;
	int dy= d2-b2;
	int length=dx;
	if(abs(dy)>abs(dx))
	{
		length=dy;
	}
	
	// first point
	 float x1=1.0f*a1;
	 float y1=1.0f*b2;
	 
	 float x=(1.0f*dx)/length;
	 float y=(1.0f*dy)/length;
	 
	  	 glBegin(GL_POINTS);
	    glColor3f(3.0f,0.0f,0.0f);
	    glVertex2f(x1,y1);
	    int i=1;
	    while(i<=length) {
	    	x1+=x;
	    	y1+=y;
	    	if(i%10>=4){
	    	glVertex2f(round(x1),round(y1));
	    }
	    	i++;
		}  
	    glEnd();
 	glFlush();
 }

 void menu(int choice){

        if(choice==1){
                simpleLine();
        }
        else if(choice==2){
                dashedLine();
        }
        else if(choice==3){
                dottedLine();
        }
        else if(choice==4){
                exit(0);
        }
}
  
   // 1 input 0 0 200 200
// 2 input -300 -300 5 5
// 3 input -200 200 0 0
int main(int argc, char** argv) {
	cout<<"enter first coordinates=";
	cin>>a1;
	cin>>b2;
	cout<<endl;
	cout<<"enter second coordinates=";
	cin>>c1;
	cin>>d2;
	cout<<endl;
	
	glutInit(&argc, argv);
	glutInitWindowPosition(100,150);
	glutCreateWindow(" DDA PROGRAM");
	glutInitWindowSize(640, 600);
	glutDisplayFunc(display);
	  glutCreateMenu(menu);
          glutAddMenuEntry("Simple Line ",1);
          glutAddMenuEntry("Dotted Line ",3);
          glutAddMenuEntry("Dashed Line ",2);
          glutAddMenuEntry("Exit ",4);
         
         glutAttachMenu(GLUT_LEFT_BUTTON);

	initGL();
	glutMainLoop();
	return 0;
}


